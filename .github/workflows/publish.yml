on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:


permissions:
  contents: write

jobs:
  create-packages:
    strategy:
      matrix:
        os: [ "ubuntu-latest" , "windows-latest", "macos-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setting up JetBrains Runtime
        shell: bash
        run: |
          set -Eeuo pipefail
          jdksPath="$HOME/.jdks"
          mkdir -p "$jdksPath"
          os=$(echo "${{ runner.os }}-${{ runner.arch }}" | tr "[:upper:]" "[:lower:]")
          if [[ "$os" == "macos-arm64" ]]; then
            jdkFileName="jbr_jcef-17.0.14-osx-aarch64-b1367.22"
            extracted="jbr_jcef-17.0.14-osx-aarch64-b1367.22"
            echo "JAVA_HOME=$jdksPath/$extracted/Contents/Home" >> "$GITHUB_ENV"
            echo "PATH=$jdksPath/$extracted/Contents/Home/bin:$PATH" >> "$GITHUB_ENV"
          else
            jdkFileName="jbrsdk-17.0.12-$os-b1207.37"
            extracted="$jdkFileName"
            echo "JAVA_HOME=$jdksPath/$jdkFileName" >> "$GITHUB_ENV"
            echo "PATH=$jdksPath/$jdkFileName/bin:$PATH" >> "$GITHUB_ENV"
          fi
          jdkFileNameWithExt="$jdkFileName.tar.gz"
          link="https://cache-redirector.jetbrains.com/intellij-jbr/$jdkFileNameWithExt"
          curl --fail --silent --location "$link" --output "$jdksPath/$jdkFileNameWithExt"
          tar -xf "$jdksPath/$jdkFileNameWithExt" -C "$jdksPath"

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ matrix.os }}-gradle
          enableCrossOsArchive: true

      # Steps specific to macOS (to create DMG for macOS)
      - name: Install create-dmg (for macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install create-dmg

      - name: Gradle
        run: |
          ./gradlew
        shell: "bash"

      - name: Build package for current OS using gradle
        shell: bash
        run: |
          ./gradlew desktop:app:createReleaseFolderForCi

      - name: Release Gradle to unlock cache files
        shell: bash
        run: |
          ./gradlew -stop

      - name: Upload output to artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./build/ci-release
          name: app-${{ matrix.os }}

  release:
    runs-on: "ubuntu-latest"
    needs: [ "create-packages" ]
    steps:
      - uses: "actions/download-artifact@v4"
        name: "Download All Artifacts Into One Directory"
        with:
          path: release
          pattern: app-*
          merge-multiple: true

      - name: Version Info
        id: version
        uses: nowsprinting/check-version-format-action@v3
        with:
          prefix: "v"

      - name: "Show the output tree of release"
        run: |
          tree .
      - uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ !steps.version.outputs.is_stable }}
          make_latest: legacy
          draft: true
          files: |
            release/binaries/*
          body_path: release/release-notes.md
      - name: "Remove artifacts to free space"
        uses: geekyeggo/delete-artifact@v5
        with:
          name: app-*