on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-dmg:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setting up Jetbrains Runtime
        shell: bash
        run: |
          set -Eeuo pipefail
          jdksPath="$HOME/.jdks"
          os=$(echo "${{ runner.os }}-${{ runner.arch }}" | tr "[:upper:]" "[:lower:]")
          jdkFileName="jbrsdk-17.0.12-$os-b1207.37"
          jdkFileNameWithExt="$jdkFileName.tar.gz"
          link="https://cache-redirector.jetbrains.com/intellij-jbr/$jdkFileNameWithExt"
          curl --location "$link" --create-dirs --output "$jdksPath/$jdkFileNameWithExt"
          tar -xf "$jdksPath/$jdkFileNameWithExt" -C "$jdksPath"
          echo "JAVA_HOME=$jdksPath/$jdkFileName" >> "$GITHUB_ENV"
          echo "PATH=$jdksPath/$jdkFileName/bin:$PATH" >> "$GITHUB_ENV"

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-macos
          enableCrossOsArchive: true

      - name: Run Gradle build
        shell: bash
        run: |
          ./gradlew
          ./gradlew desktop:app:createReleaseFolderForCi

      - name: Install create-dmg
        run: |
          brew install create-dmg

      - name: Create DMG
        shell: bash
        run: |
          create-dmg \
            --volname "ABDownloadManager" \
            --background "desktop/app/resources/installer/dmg_background.png" \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "ABDownloadManager.app" 100 150 \
            --app-drop-link 450 150 \
            "ABDownloadManager.dmg" \
            desktop/app/build/compose/binaries/main-release/app/

      - name: Upload DMG as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ABDownloadManager-dmg
          path: ABDownloadManager.dmg

  release:
    runs-on: ubuntu-latest
    needs: create-dmg
    steps:
      - name: Download DMG
        uses: actions/download-artifact@v4
        with:
          name: ABDownloadManager-dmg
          path: release

      - name: Version Info
        id: version
        uses: nowsprinting/check-version-format-action@v3
        with:
          prefix: "v"

      - name: Show contents
        run: tree release

      - uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ !steps.version.outputs.is_stable }}
          make_latest: legacy
          draft: true
          files: |
            release/ABDownloadManager.dmg
          body_path: release/release-notes.md