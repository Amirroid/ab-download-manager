on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-packages:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setting up OpenJDK for macOS
        shell: bash
        run: |
          set -Eeuo pipefail
          jdksPath="$HOME/.jdks"
          os="macos-x64"
          jdkFileName="openjdk-17_macos-x64_bin.tar.gz"
          link="https://download.java.net/openjdk/jdk17/ri/openjdk-17_macos-x64_bin.tar.gz"
          curl --location "$link" --create-dirs --output "$jdksPath/$jdkFileName"
          tar -xf "$jdksPath/$jdkFileName" -C "$jdksPath"
          echo "JAVA_HOME=$jdksPath/jdk-17" >> "$GITHUB_ENV"
          echo "PATH=$jdksPath/jdk-17/bin:$PATH" >> "$GITHUB_ENV"

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: macos-gradle
          enableCrossOsArchive: true

      - name: Gradle Build
        run: |
          ./gradlew
        shell: bash

      - name: Build package for macOS using gradle
        shell: bash
        run: |
          ./gradlew desktop:app:createReleaseFolderForCi

      - name: Release Gradle to unlock cache files
        shell: bash
        run: |
          ./gradlew -stop

      - name: Upload output to artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./build/ci-release
          name: app-macos

      - name: Install create-dmg for macOS
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install create-dmg

      - name: Create DMG for macOS
        shell: bash
        run: |
          create-dmg \
            --volname "ABDownloadManager" \
            --background "desktop/app/resources/installer/dmg_background.png" \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "ABDownloadManager.app" 100 150 \
            --app-drop-link 450 150 \
            "ABDownloadManager.dmg" \
            desktop/app/build/compose/binaries/main-release/app/

  release:
    runs-on: ubuntu-latest
    needs: ["create-packages"]
    steps:
      - uses: "actions/download-artifact@v4"
        name: "Download All Artifacts Into One Directory"
        with:
          path: release
          pattern: app-macos
          merge-multiple: true

      - name: Version Info
        id: version
        uses: nowsprinting/check-version-format-action@v3
        with:
          prefix: "v"

      - name: "Show the output tree of release"
        run: |
          tree .

      - uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ !steps.version.outputs.is_stable }}
          make_latest: legacy
          draft: true
          files: |
            release/binaries/*
            ABDownloadManager.dmg
          body_path: release/release-notes.md

      - name: "Remove artifacts to free space"
        uses: geekyeggo/delete-artifact@v5
        with:
          name: app-*